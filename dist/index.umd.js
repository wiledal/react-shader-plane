!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("react"),require("three"),require("react-three-fiber")):"function"==typeof define&&define.amd?define(["exports","react","three","react-three-fiber"],n):n((e=e||self).reactShaderPlane={},e.react,e.three,e.reactThreeFiber)}(this,function(e,n,r,t){var a="default"in n?n.default:n;function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e}).apply(this,arguments)}var u="\n  vec4 texelColor = texture2D( map, vUv );\n  texelColor = mapTexelToLinear( texelColor );\n  diffuseColor = texelColor;\n",i={uTime:{type:"float",value:0},uMouse:{type:"vec2",value:[0,0]}};function f(e){var f=t.useThree(),c=f.camera,m=f.gl,l=f.mouse,s=n.useState(),p=s[0],d=s[1],h=n.useState(),v=h[0],y=h[1];function x(n){var r,t=o({},i,{},e.uniforms);n.uniforms=o({},n.uniforms,{},t),n.fragmentShader="\n      "+(r=t,"\n    "+Object.keys(r).map(function(e){return function(e,n){return"uniform "+n.type+" "+e+";"}(e,r[e])}).join("")+"\n  \n    ")+n.fragmentShader.replace("#include <common>","\n      "+(e.functions||"")+"\n\n      #include <common>\n    ").replace("#include <map_fragment>","\n        "+(e.fragmentShader||u)+"\n      "),y(n)}return n.useEffect(function(){c.position.z=500;var n=new r.PlaneBufferGeometry(1,1,24,24),t=new r.MeshBasicMaterial({map:e.map,onBeforeCompile:x}),a=new r.Mesh(n,t);d(a)},[]),t.useFrame(function(){v&&(v.uniforms.uTime.value=performance.now(),p.scale.x=m.domElement.width,p.scale.y=m.domElement.height,v.uniforms.uMouse.value=[l.x,l.y]),e.onFrame&&e.onFrame(v)}),a.createElement(a.Fragment,null,p&&a.createElement("primitive",{object:p}))}e.Plane=f,e.default=function(e){return void 0===e&&(e={uniforms:[],map:r.Texture,fragmentShader:u,functions:"",onFrame:Function}),a.createElement(t.Canvas,{orthographic:!0},a.createElement(f,e))}});
//# sourceMappingURL=index.umd.js.map
